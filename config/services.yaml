# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    dynamodb_aws_key: '%env(AWS_ACCESS_KEY_ID)%'
    dynamodb_aws_secret: '%env(AWS_SECRET_ACCESS_KEY)%'
    dynamodb_endpoint: '%env(DYNAMO_DB_ENDPOINT)%'
    dynamodb_region: '%env(AWS_REGION)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Aws\DynamoDb\DynamoDbClient:
        class: Aws\DynamoDb\DynamoDbClient
        arguments:
            -
                region: '%dynamodb_region%'
                endpoint: '%dynamodb_endpoint%'
                version: 'latest'

    session.dynamodb_handler:
        class: Aws\DynamoDb\SessionHandler
        factory: ['Aws\DynamoDb\SessionHandler', fromClient]
        arguments: ['@Aws\DynamoDb\DynamoDbClient']
